image: 'rust:latest'

cache:
  paths:
    - cargo/

stages:
  - checks
  - build
  - test
  - integration-test

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo

.only-mr-and-main:
  only:
    - main
    - merge_requests

style-check:
  stage: checks
  extends: .only-mr-and-main
  script:
    - rustc --version
    - rustup component add rustfmt
    - cargo fmt -- --version
    - cargo fmt -- --check

clippy:
  stage: checks
  extends: .only-mr-and-main
  script:
    - rustc --version
    - rustup component add clippy
    - cargo clippy --version
    - cargo clippy --all-targets --all-features -- -D warnings

build:
  stage: build
  extends: .only-mr-and-main
  script:
    - rustc --version
    - cargo --version
    - cargo build --verbose
  artifacts:
    expire_in: 1 hour
    paths:
      - cargo/
      - target/

build-release:
  stage: build
  extends: .only-mr-and-main
  script:
    - rustc --version
    - cargo --version
    - cargo build --release --verbose
  artifacts:
    expire_in: 1 hour
    paths:
      - cargo/
      - target/

test:
  stage: test
  extends: .only-mr-and-main
  script:
    - cargo test --locked --verbose
  needs: ['build']

.lua-setup:
  before_script:
    - apt-get -qq update
    - apt-get -qq install -y python3
    - python3 --version
    - apt-get -qq install -y python3-pip
    - python3 -m pip --version
    - chmod u+x ./bin/install-lua.sh
    - ./bin/install-lua.sh
    - export PATH=$PATH:$PWD/lua_install/bin

test-lua-projects:
  stage: integration-test
  extends:
    - .only-mr-and-main
    - .lua-setup
  script:
    - lua ./bin/test-commands.lua
  needs: ['build-release']
